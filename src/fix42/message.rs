use types::*;
use fix42::fields::*;

pub struct Header {
    pub begin_string: FIXString,
    pub body_length: FIXInt,
    pub msg_type: MsgType,
    pub sender_comp_id: FIXString,
    pub target_comp_id: FIXString,
    pub on_behalf_of_comp_id: Option<FIXString>,
    pub deliver_to_comp_id: Option<FIXString>,
    pub secure_data_len: Option<Length>,
    pub secure_data: Option<Data>,
    pub msg_seq_num: FIXInt,
    pub sender_sub_id: Option<FIXString>,
    pub sender_location_id: Option<FIXString>,
    pub target_sub_id: Option<FIXString>,
    pub target_location_id: Option<FIXString>,
    pub on_behalf_of_sub_id: Option<FIXString>,
    pub on_behalf_of_location_id: Option<FIXString>,
    pub deliver_to_sub_id: Option<FIXString>,
    pub deliver_to_location_id: Option<FIXString>,
    pub poss_dup_flag: Option<PossDupFlag>,
    pub poss_resend: Option<PossResend>,
    pub sending_time: UTCTimestamp,
    pub orig_sending_time: Option<UTCTimestamp>,
    pub xml_data: Option<Data>,
    pub message_encoding: Option<MessageEncoding>,
    pub last_msg_seq_num_processed: Option<FIXInt>,
    pub on_behalf_of_sending_time: Option<UTCTimestamp>
}

pub struct Message {
    /// Standard message header.
    pub header: Header,
    /// Message body
    pub body: MessageBody,
}

pub enum MessageBody {
    /// Heartbeat message. Message code: 0
    Heartbeat {
        test_req_id: Option<FIXString>
    },

    /// TestRequest message. Message code: 1
    TestRequest {
        test_req_id: FIXString
    },

    /// ResendRequest message. Message code: 2
    ResendRequest {
        begin_seq_no: FIXInt,
        end_seq_no: FIXInt
    },

    /// Reject message. Message code: 3
    Reject {
        ref_seq_num: FIXInt,
        ref_tag_id: Option<FIXInt>,
        ref_msg_type: Option<FIXString>,
        session_reject_reason: Option<SessionRejectReason>,
        text: Option<FIXString>,
        encoded_text: Option<Data>
    },

    /// SequenceReset message. Message code: 4
    SequenceReset {
        gap_fill_flag: Option<GapFillFlag>,
        new_seq_no: FIXInt
    },

    /// Logout message. Message code: 5
    Logout {
        text: Option<FIXString>,
        encoded_text: Option<Data>
    },

    /// IOI message. Message code: 6
    IOI {
        io_iid: FIXString,
        ioi_trans_type: IOITransType,
        ioi_ref_id: Option<FIXString>,
        symbol: FIXString,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        side: Side,
        ioi_shares: IOIShares,
        price: Option<Price>,
        currency: Option<Currency>,
        valid_until_time: Option<UTCTimestamp>,
        ioi_qlty_ind: Option<IOIQltyInd>,
        ioi_natural_flag: Option<IOINaturalFlag>,
        ioi_qualifier: Option<IOIQualifier>,
        text: Option<FIXString>,
        encoded_text: Option<Data>,
        transact_time: Option<UTCTimestamp>,
        url_link: Option<FIXString>,
        routing_type: Option<RoutingType>,
        routing_id: Option<FIXString>,
        spread_to_benchmark: Option<PriceOffset>,
        benchmark: Option<Benchmark>
    },

    /// Advertisement message. Message code: 7
    Advertisement {
        adv_id: FIXString,
        adv_trans_type: AdvTransType,
        adv_ref_id: Option<FIXString>,
        symbol: FIXString,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        adv_side: AdvSide,
        shares: Qty,
        price: Option<Price>,
        currency: Option<Currency>,
        trade_date: Option<LocalMktDate>,
        transact_time: Option<UTCTimestamp>,
        text: Option<FIXString>,
        encoded_text: Option<Data>,
        url_link: Option<FIXString>,
        last_mkt: Option<ReutersExchange>,
        trading_session_id: Option<FIXString>
    },

    /// ExecutionReport message. Message code: 8
    ExecutionReport {
        order_id: FIXString,
        secondary_order_id: Option<FIXString>,
        cl_ord_id: Option<FIXString>,
        orig_cl_ord_id: Option<FIXString>,
        client_id: Option<FIXString>,
        exec_broker: Option<FIXString>,
        contra_broker: Option<FIXString>,
        contra_trader: Option<FIXString>,
        contra_trade_qty: Option<Qty>,
        contra_trade_time: Option<UTCTimestamp>,
        list_id: Option<FIXString>,
        exec_id: FIXString,
        exec_trans_type: ExecTransType,
        exec_ref_id: Option<FIXString>,
        exec_type: ExecType,
        ord_status: OrdStatus,
        ord_rej_reason: Option<OrdRejReason>,
        exec_restatement_reason: Option<ExecRestatementReason>,
        account: Option<FIXString>,
        settlmnt_typ: Option<SettlmntTyp>,
        fut_sett_date: Option<LocalMktDate>,
        symbol: FIXString,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        side: Side,
        order_qty: Option<Qty>,
        cash_order_qty: Option<Qty>,
        ord_type: Option<OrdType>,
        price: Option<Price>,
        stop_px: Option<Price>,
        peg_difference: Option<PriceOffset>,
        discretion_inst: Option<DiscretionInst>,
        discretion_offset: Option<PriceOffset>,
        currency: Option<Currency>,
        compliance_id: Option<FIXString>,
        solicited_flag: Option<SolicitedFlag>,
        time_in_force: Option<TimeInForce>,
        effective_time: Option<UTCTimestamp>,
        expire_date: Option<LocalMktDate>,
        expire_time: Option<UTCTimestamp>,
        exec_inst: Option<ExecInst>,
        rule80_a: Option<Rule80A>,
        last_shares: Option<Qty>,
        last_px: Option<Price>,
        last_spot_rate: Option<Price>,
        last_forward_points: Option<PriceOffset>,
        last_mkt: Option<ReutersExchange>,
        trading_session_id: Option<FIXString>,
        last_capacity: Option<LastCapacity>,
        leaves_qty: Qty,
        cum_qty: Qty,
        avg_px: Price,
        day_order_qty: Option<Qty>,
        day_cum_qty: Option<Qty>,
        day_avg_px: Option<Price>,
        gt_booking_inst: Option<GTBookingInst>,
        trade_date: Option<LocalMktDate>,
        transact_time: Option<UTCTimestamp>,
        report_to_exch: Option<ReportToExch>,
        commission: Option<Amt>,
        comm_type: Option<CommType>,
        gross_trade_amt: Option<Amt>,
        settl_curr_amt: Option<Amt>,
        settl_currency: Option<Currency>,
        settl_curr_fx_rate: Option<FIXFloat>,
        settl_curr_fx_rate_calc: Option<SettlCurrFxRateCalc>,
        handl_inst: Option<HandlInst>,
        min_qty: Option<Qty>,
        max_floor: Option<Qty>,
        open_close: Option<OpenClose>,
        max_show: Option<Qty>,
        text: Option<FIXString>,
        encoded_text: Option<Data>,
        fut_sett_date2: Option<LocalMktDate>,
        order_qty2: Option<Qty>,
        clearing_firm: Option<FIXString>,
        clearing_account: Option<FIXString>,
        multi_leg_reporting_type: Option<MultiLegReportingType>
    },

    /// OrderCancelReject message. Message code: 9
    OrderCancelReject {
        order_id: FIXString,
        secondary_order_id: Option<FIXString>,
        cl_ord_id: FIXString,
        orig_cl_ord_id: FIXString,
        ord_status: OrdStatus,
        client_id: Option<FIXString>,
        exec_broker: Option<FIXString>,
        list_id: Option<FIXString>,
        account: Option<FIXString>,
        transact_time: Option<UTCTimestamp>,
        cxl_rej_response_to: CxlRejResponseTo,
        cxl_rej_reason: Option<CxlRejReason>,
        text: Option<FIXString>,
        encoded_text: Option<Data>
    },

    /// Logon message. Message code: A
    Logon {
        encrypt_method: EncryptMethod,
        heart_bt_int: FIXInt,
        raw_data_length: Option<Length>,
        raw_data: Option<Data>,
        reset_seq_num_flag: Option<ResetSeqNumFlag>,
        max_message_size: Option<FIXInt>,
        ref_msg_type: Option<FIXString>,
        msg_direction: Option<MsgDirection>
    },

    /// News message. Message code: B
    News {
        orig_time: Option<UTCTimestamp>,
        urgency: Option<Urgency>,
        headline: FIXString,
        encoded_headline: Option<Data>,
        routing_type: Option<RoutingType>,
        routing_id: Option<FIXString>,
        relatd_sym: Option<FIXString>,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        text: FIXString,
        encoded_text: Option<Data>,
        url_link: Option<FIXString>,
        raw_data_length: Option<Length>,
        raw_data: Option<Data>
    },

    /// Email message. Message code: C
    Email {
        email_thread_id: FIXString,
        email_type: EmailType,
        orig_time: Option<UTCTimestamp>,
        subject: FIXString,
        encoded_subject_len: Option<Length>,
        encoded_subject: Option<Data>,
        routing_type: Option<RoutingType>,
        routing_id: Option<FIXString>,
        relatd_sym: Option<FIXString>,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        order_id: Option<FIXString>,
        cl_ord_id: Option<FIXString>,
        text: FIXString,
        encoded_text: Option<Data>,
        raw_data_length: Option<Length>,
        raw_data: Option<Data>
    },

    /// NewOrderSingle message. Message code: D
    NewOrderSingle {
        cl_ord_id: FIXString,
        client_id: Option<FIXString>,
        exec_broker: Option<FIXString>,
        account: Option<FIXString>,
        alloc_account: Option<FIXString>,
        alloc_shares: Option<Qty>,
        settlmnt_typ: Option<SettlmntTyp>,
        fut_sett_date: Option<LocalMktDate>,
        handl_inst: HandlInst,
        exec_inst: Option<ExecInst>,
        min_qty: Option<Qty>,
        max_floor: Option<Qty>,
        ex_destination: Option<ReutersExchange>,
        trading_session_id: Option<FIXString>,
        process_code: Option<ProcessCode>,
        symbol: FIXString,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        prev_close_px: Option<Price>,
        side: Side,
        locate_reqd: Option<LocateReqd>,
        transact_time: UTCTimestamp,
        order_qty: Option<Qty>,
        cash_order_qty: Option<Qty>,
        ord_type: OrdType,
        price: Option<Price>,
        stop_px: Option<Price>,
        currency: Option<Currency>,
        compliance_id: Option<FIXString>,
        solicited_flag: Option<SolicitedFlag>,
        io_iid: Option<FIXString>,
        quote_id: Option<FIXString>,
        time_in_force: Option<TimeInForce>,
        effective_time: Option<UTCTimestamp>,
        expire_date: Option<LocalMktDate>,
        expire_time: Option<UTCTimestamp>,
        gt_booking_inst: Option<GTBookingInst>,
        commission: Option<Amt>,
        comm_type: Option<CommType>,
        rule80_a: Option<Rule80A>,
        forex_req: Option<ForexReq>,
        settl_currency: Option<Currency>,
        text: Option<FIXString>,
        encoded_text: Option<Data>,
        fut_sett_date2: Option<LocalMktDate>,
        order_qty2: Option<Qty>,
        open_close: Option<OpenClose>,
        covered_or_uncovered: Option<CoveredOrUncovered>,
        customer_or_firm: Option<CustomerOrFirm>,
        max_show: Option<Qty>,
        peg_difference: Option<PriceOffset>,
        discretion_inst: Option<DiscretionInst>,
        discretion_offset: Option<PriceOffset>,
        clearing_firm: Option<FIXString>,
        clearing_account: Option<FIXString>
    },

    /// NewOrderList message. Message code: E
    NewOrderList {
        list_id: FIXString,
        bid_id: Option<FIXString>,
        client_bid_id: Option<FIXString>,
        prog_rpt_reqs: Option<ProgRptReqs>,
        bid_type: FIXInt,
        prog_period_interval: Option<FIXInt>,
        list_exec_inst_type: Option<ListExecInstType>,
        list_exec_inst: Option<FIXString>,
        encoded_list_exec_inst: Option<Data>,
        tot_no_orders: FIXInt,
        cl_ord_id: FIXString,
        list_seq_no: FIXInt,
        settl_inst_mode: Option<SettlInstMode>,
        client_id: Option<FIXString>,
        exec_broker: Option<FIXString>,
        account: Option<FIXString>,
        alloc_account: Option<FIXString>,
        alloc_shares: Option<Qty>,
        settlmnt_typ: Option<SettlmntTyp>,
        fut_sett_date: Option<LocalMktDate>,
        handl_inst: Option<HandlInst>,
        exec_inst: Option<ExecInst>,
        min_qty: Option<Qty>,
        max_floor: Option<Qty>,
        ex_destination: Option<ReutersExchange>,
        trading_session_id: Option<FIXString>,
        process_code: Option<ProcessCode>,
        symbol: FIXString,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        prev_close_px: Option<Price>,
        side: Side,
        side_value_ind: Option<FIXInt>,
        locate_reqd: Option<LocateReqd>,
        transact_time: Option<UTCTimestamp>,
        order_qty: Option<Qty>,
        cash_order_qty: Option<Qty>,
        ord_type: Option<OrdType>,
        price: Option<Price>,
        stop_px: Option<Price>,
        currency: Option<Currency>,
        compliance_id: Option<FIXString>,
        solicited_flag: Option<SolicitedFlag>,
        io_iid: Option<FIXString>,
        quote_id: Option<FIXString>,
        time_in_force: Option<TimeInForce>,
        effective_time: Option<UTCTimestamp>,
        expire_date: Option<LocalMktDate>,
        expire_time: Option<UTCTimestamp>,
        gt_booking_inst: Option<GTBookingInst>,
        commission: Option<Amt>,
        comm_type: Option<CommType>,
        rule80_a: Option<Rule80A>,
        forex_req: Option<ForexReq>,
        settl_currency: Option<Currency>,
        text: Option<FIXString>,
        encoded_text: Option<Data>,
        fut_sett_date2: Option<LocalMktDate>,
        order_qty2: Option<Qty>,
        open_close: Option<OpenClose>,
        covered_or_uncovered: Option<CoveredOrUncovered>,
        customer_or_firm: Option<CustomerOrFirm>,
        max_show: Option<Qty>,
        peg_difference: Option<PriceOffset>,
        discretion_inst: Option<DiscretionInst>,
        discretion_offset: Option<PriceOffset>,
        clearing_firm: Option<FIXString>,
        clearing_account: Option<FIXString>
    },

    /// OrderCancelRequest message. Message code: F
    OrderCancelRequest {
        orig_cl_ord_id: FIXString,
        order_id: Option<FIXString>,
        cl_ord_id: FIXString,
        list_id: Option<FIXString>,
        account: Option<FIXString>,
        client_id: Option<FIXString>,
        exec_broker: Option<FIXString>,
        symbol: FIXString,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        side: Side,
        transact_time: UTCTimestamp,
        order_qty: Option<Qty>,
        cash_order_qty: Option<Qty>,
        compliance_id: Option<FIXString>,
        solicited_flag: Option<SolicitedFlag>,
        text: Option<FIXString>,
        encoded_text: Option<Data>
    },

    /// OrderCancelReplaceRequest message. Message code: G
    OrderCancelReplaceRequest {
        order_id: Option<FIXString>,
        client_id: Option<FIXString>,
        exec_broker: Option<FIXString>,
        orig_cl_ord_id: FIXString,
        cl_ord_id: FIXString,
        list_id: Option<FIXString>,
        account: Option<FIXString>,
        alloc_account: Option<FIXString>,
        alloc_shares: Option<Qty>,
        settlmnt_typ: Option<SettlmntTyp>,
        fut_sett_date: Option<LocalMktDate>,
        handl_inst: HandlInst,
        exec_inst: Option<ExecInst>,
        min_qty: Option<Qty>,
        max_floor: Option<Qty>,
        ex_destination: Option<ReutersExchange>,
        trading_session_id: Option<FIXString>,
        symbol: FIXString,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        side: Side,
        transact_time: UTCTimestamp,
        order_qty: Option<Qty>,
        cash_order_qty: Option<Qty>,
        ord_type: OrdType,
        price: Option<Price>,
        stop_px: Option<Price>,
        peg_difference: Option<PriceOffset>,
        discretion_inst: Option<DiscretionInst>,
        discretion_offset: Option<PriceOffset>,
        compliance_id: Option<FIXString>,
        solicited_flag: Option<SolicitedFlag>,
        currency: Option<Currency>,
        time_in_force: Option<TimeInForce>,
        effective_time: Option<UTCTimestamp>,
        expire_date: Option<LocalMktDate>,
        expire_time: Option<UTCTimestamp>,
        gt_booking_inst: Option<GTBookingInst>,
        commission: Option<Amt>,
        comm_type: Option<CommType>,
        rule80_a: Option<Rule80A>,
        forex_req: Option<ForexReq>,
        settl_currency: Option<Currency>,
        text: Option<FIXString>,
        encoded_text: Option<Data>,
        fut_sett_date2: Option<LocalMktDate>,
        order_qty2: Option<Qty>,
        open_close: Option<OpenClose>,
        covered_or_uncovered: Option<CoveredOrUncovered>,
        customer_or_firm: Option<CustomerOrFirm>,
        max_show: Option<Qty>,
        locate_reqd: Option<LocateReqd>,
        clearing_firm: Option<FIXString>,
        clearing_account: Option<FIXString>
    },

    /// OrderStatusRequest message. Message code: H
    OrderStatusRequest {
        order_id: Option<FIXString>,
        cl_ord_id: FIXString,
        client_id: Option<FIXString>,
        account: Option<FIXString>,
        exec_broker: Option<FIXString>,
        symbol: FIXString,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        side: Side
    },

    /// Allocation message. Message code: J
    Allocation {
        alloc_id: FIXString,
        alloc_trans_type: AllocTransType,
        ref_alloc_id: Option<FIXString>,
        alloc_link_id: Option<FIXString>,
        alloc_link_type: Option<AllocLinkType>,
        cl_ord_id: Option<FIXString>,
        order_id: Option<FIXString>,
        secondary_order_id: Option<FIXString>,
        list_id: Option<FIXString>,
        wave_no: Option<FIXString>,
        last_shares: Option<Qty>,
        exec_id: Option<FIXString>,
        last_px: Option<Price>,
        last_capacity: Option<LastCapacity>,
        side: Side,
        symbol: FIXString,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        shares: Qty,
        last_mkt: Option<ReutersExchange>,
        trading_session_id: Option<FIXString>,
        avg_px: Price,
        currency: Option<Currency>,
        avg_prx_precision: Option<FIXInt>,
        trade_date: LocalMktDate,
        transact_time: Option<UTCTimestamp>,
        settlmnt_typ: Option<SettlmntTyp>,
        fut_sett_date: Option<LocalMktDate>,
        gross_trade_amt: Option<Amt>,
        net_money: Option<Amt>,
        open_close: Option<OpenClose>,
        text: Option<FIXString>,
        encoded_text: Option<Data>,
        num_days_interest: Option<FIXInt>,
        accrued_interest_rate: Option<FIXFloat>,
        alloc_account: Option<FIXString>,
        alloc_price: Option<Price>,
        alloc_shares: Qty,
        process_code: Option<ProcessCode>,
        broker_of_credit: Option<FIXString>,
        notify_broker_of_credit: Option<NotifyBrokerOfCredit>,
        alloc_handl_inst: Option<AllocHandlInst>,
        alloc_text: Option<FIXString>,
        encoded_alloc_text: Option<Data>,
        exec_broker: Option<FIXString>,
        client_id: Option<FIXString>,
        commission: Option<Amt>,
        comm_type: Option<CommType>,
        alloc_avg_px: Option<Price>,
        alloc_net_money: Option<Amt>,
        settl_curr_amt: Option<Amt>,
        settl_currency: Option<Currency>,
        settl_curr_fx_rate: Option<FIXFloat>,
        settl_curr_fx_rate_calc: Option<SettlCurrFxRateCalc>,
        accrued_interest_amt: Option<Amt>,
        settl_inst_mode: Option<SettlInstMode>,
        misc_fee_amt: Option<Amt>,
        misc_fee_curr: Option<Currency>,
        misc_fee_type: Option<MiscFeeType>
    },

    /// ListCancelRequest message. Message code: K
    ListCancelRequest {
        list_id: FIXString,
        transact_time: UTCTimestamp,
        text: Option<FIXString>,
        encoded_text: Option<Data>
    },

    /// ListExecute message. Message code: L
    ListExecute {
        list_id: FIXString,
        client_bid_id: Option<FIXString>,
        bid_id: Option<FIXString>,
        transact_time: UTCTimestamp,
        text: Option<FIXString>,
        encoded_text: Option<Data>
    },

    /// ListStatusRequest message. Message code: M
    ListStatusRequest {
        list_id: FIXString,
        text: Option<FIXString>,
        encoded_text: Option<Data>
    },

    /// ListStatus message. Message code: N
    ListStatus {
        list_id: FIXString,
        list_status_type: FIXInt,
        no_rpts: FIXInt,
        list_order_status: FIXInt,
        rpt_seq: FIXInt,
        list_status_text: Option<FIXString>,
        encoded_list_status_text_len: Option<Length>,
        encoded_list_status_text: Option<Data>,
        transact_time: Option<UTCTimestamp>,
        tot_no_orders: FIXInt,
        cl_ord_id: FIXString,
        cum_qty: Qty,
        ord_status: OrdStatus,
        leaves_qty: Qty,
        cxl_qty: Qty,
        avg_px: Price,
        ord_rej_reason: Option<OrdRejReason>,
        text: Option<FIXString>,
        encoded_text: Option<Data>
    },

    /// AllocationInstructionAck message. Message code: P
    AllocationInstructionAck {
        client_id: Option<FIXString>,
        exec_broker: Option<FIXString>,
        alloc_id: FIXString,
        trade_date: LocalMktDate,
        transact_time: Option<UTCTimestamp>,
        alloc_status: AllocStatus,
        alloc_rej_code: Option<AllocRejCode>,
        text: Option<FIXString>,
        encoded_text: Option<Data>
    },

    /// DontKnowTrade message. Message code: Q
    DontKnowTrade {
        order_id: FIXString,
        exec_id: FIXString,
        dk_reason: DKReason,
        symbol: FIXString,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        side: Side,
        order_qty: Option<Qty>,
        cash_order_qty: Option<Qty>,
        last_shares: Option<Qty>,
        last_px: Option<Price>,
        text: Option<FIXString>,
        encoded_text: Option<Data>
    },

    /// QuoteRequest message. Message code: R
    QuoteRequest {
        quote_req_id: FIXString,
        symbol: FIXString,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        prev_close_px: Option<Price>,
        quote_request_type: Option<QuoteRequestType>,
        trading_session_id: Option<FIXString>,
        side: Option<Side>,
        order_qty: Option<Qty>,
        fut_sett_date: Option<LocalMktDate>,
        ord_type: Option<OrdType>,
        fut_sett_date2: Option<LocalMktDate>,
        order_qty2: Option<Qty>,
        expire_time: Option<UTCTimestamp>,
        transact_time: Option<UTCTimestamp>,
        currency: Option<Currency>
    },

    /// Quote message. Message code: S
    Quote {
        quote_req_id: Option<FIXString>,
        quote_id: FIXString,
        quote_response_level: Option<QuoteResponseLevel>,
        trading_session_id: Option<FIXString>,
        symbol: FIXString,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        bid_px: Option<Price>,
        offer_px: Option<Price>,
        bid_size: Option<Qty>,
        offer_size: Option<Qty>,
        valid_until_time: Option<UTCTimestamp>,
        bid_spot_rate: Option<Price>,
        offer_spot_rate: Option<Price>,
        bid_forward_points: Option<PriceOffset>,
        offer_forward_points: Option<PriceOffset>,
        transact_time: Option<UTCTimestamp>,
        fut_sett_date: Option<LocalMktDate>,
        ord_type: Option<OrdType>,
        fut_sett_date2: Option<LocalMktDate>,
        order_qty2: Option<Qty>,
        currency: Option<Currency>
    },

    /// SettlementInstructions message. Message code: T
    SettlementInstructions {
        settl_inst_id: FIXString,
        settl_inst_trans_type: SettlInstTransType,
        settl_inst_ref_id: FIXString,
        settl_inst_mode: SettlInstMode,
        settl_inst_source: SettlInstSource,
        alloc_account: FIXString,
        settl_location: Option<SettlLocation>,
        trade_date: Option<LocalMktDate>,
        alloc_id: Option<FIXString>,
        last_mkt: Option<ReutersExchange>,
        trading_session_id: Option<FIXString>,
        side: Option<Side>,
        security_type: Option<SecurityType>,
        effective_time: Option<UTCTimestamp>,
        transact_time: UTCTimestamp,
        client_id: Option<FIXString>,
        exec_broker: Option<FIXString>,
        stand_inst_db_type: Option<StandInstDbType>,
        stand_inst_db_name: Option<FIXString>,
        stand_inst_db_id: Option<FIXString>,
        settl_delivery_type: Option<FIXInt>,
        settl_depository_code: Option<FIXString>,
        settl_brkr_code: Option<FIXString>,
        settl_inst_code: Option<FIXString>,
        security_settl_agent_name: Option<FIXString>,
        security_settl_agent_code: Option<FIXString>,
        security_settl_agent_acct_num: Option<FIXString>,
        security_settl_agent_acct_name: Option<FIXString>,
        security_settl_agent_contact_name: Option<FIXString>,
        security_settl_agent_contact_phone: Option<FIXString>,
        cash_settl_agent_name: Option<FIXString>,
        cash_settl_agent_code: Option<FIXString>,
        cash_settl_agent_acct_num: Option<FIXString>,
        cash_settl_agent_acct_name: Option<FIXString>,
        cash_settl_agent_contact_name: Option<FIXString>,
        cash_settl_agent_contact_phone: Option<FIXString>
    },

    /// MarketDataRequest message. Message code: V
    MarketDataRequest {
        md_req_id: FIXString,
        subscription_request_type: SubscriptionRequestType,
        market_depth: FIXInt,
        md_update_type: Option<MDUpdateType>,
        aggregated_book: Option<AggregatedBook>,
        md_entry_type: MDEntryType,
        symbol: FIXString,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        trading_session_id: Option<FIXString>
    },

    /// MarketDataSnapshotFullRefresh message. Message code: W
    MarketDataSnapshotFullRefresh {
        md_req_id: Option<FIXString>,
        symbol: FIXString,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        financial_status: Option<FinancialStatus>,
        corporate_action: Option<CorporateAction>,
        total_volume_traded: Option<Qty>,
        md_entry_type: MDEntryType,
        md_entry_px: Price,
        currency: Option<Currency>,
        md_entry_size: Option<Qty>,
        md_entry_date: Option<UTCDateOnly>,
        md_entry_time: Option<UTCTimeOnly>,
        tick_direction: Option<TickDirection>,
        md_mkt: Option<ReutersExchange>,
        trading_session_id: Option<FIXString>,
        quote_condition: Option<QuoteCondition>,
        trade_condition: Option<TradeCondition>,
        md_entry_originator: Option<FIXString>,
        location_id: Option<FIXString>,
        desk_id: Option<FIXString>,
        open_close_settle_flag: Option<OpenCloseSettleFlag>,
        time_in_force: Option<TimeInForce>,
        expire_date: Option<LocalMktDate>,
        expire_time: Option<UTCTimestamp>,
        min_qty: Option<Qty>,
        exec_inst: Option<ExecInst>,
        seller_days: Option<FIXInt>,
        order_id: Option<FIXString>,
        quote_entry_id: Option<FIXString>,
        md_entry_buyer: Option<FIXString>,
        md_entry_seller: Option<FIXString>,
        number_of_orders: Option<FIXInt>,
        md_entry_position_no: Option<FIXInt>,
        text: Option<FIXString>,
        encoded_text: Option<Data>
    },

    /// MarketDataIncrementalRefresh message. Message code: X
    MarketDataIncrementalRefresh {
        md_req_id: Option<FIXString>,
        md_update_action: MDUpdateAction,
        delete_reason: Option<DeleteReason>,
        md_entry_type: Option<MDEntryType>,
        md_entry_id: Option<FIXString>,
        md_entry_ref_id: Option<FIXString>,
        symbol: Option<FIXString>,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        financial_status: Option<FinancialStatus>,
        corporate_action: Option<CorporateAction>,
        md_entry_px: Option<Price>,
        currency: Option<Currency>,
        md_entry_size: Option<Qty>,
        md_entry_date: Option<UTCDateOnly>,
        md_entry_time: Option<UTCTimeOnly>,
        tick_direction: Option<TickDirection>,
        md_mkt: Option<ReutersExchange>,
        trading_session_id: Option<FIXString>,
        quote_condition: Option<QuoteCondition>,
        trade_condition: Option<TradeCondition>,
        md_entry_originator: Option<FIXString>,
        location_id: Option<FIXString>,
        desk_id: Option<FIXString>,
        open_close_settle_flag: Option<OpenCloseSettleFlag>,
        time_in_force: Option<TimeInForce>,
        expire_date: Option<LocalMktDate>,
        expire_time: Option<UTCTimestamp>,
        min_qty: Option<Qty>,
        exec_inst: Option<ExecInst>,
        seller_days: Option<FIXInt>,
        order_id: Option<FIXString>,
        quote_entry_id: Option<FIXString>,
        md_entry_buyer: Option<FIXString>,
        md_entry_seller: Option<FIXString>,
        number_of_orders: Option<FIXInt>,
        md_entry_position_no: Option<FIXInt>,
        total_volume_traded: Option<Qty>,
        text: Option<FIXString>,
        encoded_text: Option<Data>
    },

    /// MarketDataRequestReject message. Message code: Y
    MarketDataRequestReject {
        md_req_id: FIXString,
        md_req_rej_reason: Option<MDReqRejReason>,
        text: Option<FIXString>,
        encoded_text: Option<Data>
    },

    /// QuoteCancel message. Message code: Z
    QuoteCancel {
        quote_req_id: Option<FIXString>,
        quote_id: FIXString,
        quote_cancel_type: QuoteCancelType,
        quote_response_level: Option<QuoteResponseLevel>,
        trading_session_id: Option<FIXString>,
        symbol: FIXString,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        underlying_symbol: Option<FIXString>
    },

    /// QuoteStatusRequest message. Message code: a
    QuoteStatusRequest {
        quote_id: Option<FIXString>,
        symbol: FIXString,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        side: Option<Side>,
        trading_session_id: Option<FIXString>
    },

    /// QuoteAcknowledgement message. Message code: b
    QuoteAcknowledgement {
        quote_req_id: Option<FIXString>,
        quote_id: Option<FIXString>,
        quote_ack_status: QuoteAckStatus,
        quote_reject_reason: Option<QuoteRejectReason>,
        quote_response_level: Option<QuoteResponseLevel>,
        trading_session_id: Option<FIXString>,
        text: Option<FIXString>,
        quote_set_id: Option<FIXString>,
        underlying_symbol: Option<FIXString>,
        underlying_symbol_sfx: Option<FIXString>,
        underlying_security_id: Option<FIXString>,
        underlying_id_source: Option<FIXString>,
        underlying_security_type: Option<FIXString>,
        underlying_maturity_month_year: Option<MonthYear>,
        underlying_maturity_day: Option<DayOfMonth>,
        underlying_put_or_call: Option<FIXInt>,
        underlying_strike_price: Option<Price>,
        underlying_opt_attribute: Option<FIXChar>,
        underlying_contract_multiplier: Option<FIXFloat>,
        underlying_coupon_rate: Option<FIXFloat>,
        underlying_security_exchange: Option<ReutersExchange>,
        underlying_issuer: Option<FIXString>,
        encoded_underlying_issuer: Option<Data>,
        underlying_security_desc: Option<FIXString>,
        encoded_underlying_security_desc: Option<Data>,
        tot_quote_entries: Option<FIXInt>,
        quote_entry_id: Option<FIXString>,
        symbol: Option<FIXString>,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        quote_entry_reject_reason: Option<QuoteEntryRejectReason>
    },

    /// SecurityDefinitionRequest message. Message code: c
    SecurityDefinitionRequest {
        security_req_id: FIXString,
        security_request_type: SecurityRequestType,
        symbol: Option<FIXString>,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        currency: Option<Currency>,
        text: Option<FIXString>,
        encoded_text: Option<Data>,
        trading_session_id: Option<FIXString>,
        underlying_symbol: Option<FIXString>,
        underlying_symbol_sfx: Option<FIXString>,
        underlying_security_id: Option<FIXString>,
        underlying_id_source: Option<FIXString>,
        underlying_security_type: Option<FIXString>,
        underlying_maturity_month_year: Option<MonthYear>,
        underlying_maturity_day: Option<DayOfMonth>,
        underlying_put_or_call: Option<FIXInt>,
        underlying_strike_price: Option<Price>,
        underlying_opt_attribute: Option<FIXChar>,
        underlying_contract_multiplier: Option<FIXFloat>,
        underlying_coupon_rate: Option<FIXFloat>,
        underlying_security_exchange: Option<ReutersExchange>,
        underlying_issuer: Option<FIXString>,
        encoded_underlying_issuer: Option<Data>,
        underlying_security_desc: Option<FIXString>,
        encoded_underlying_security_desc: Option<Data>,
        ratio_qty: Option<Qty>,
        side: Option<Side>,
        underlying_currency: Option<Currency>
    },

    /// SecurityDefinition message. Message code: d
    SecurityDefinition {
        security_req_id: FIXString,
        security_response_id: FIXString,
        security_response_type: Option<SecurityResponseType>,
        total_num_securities: FIXInt,
        symbol: Option<FIXString>,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        currency: Option<Currency>,
        trading_session_id: Option<FIXString>,
        text: Option<FIXString>,
        encoded_text: Option<Data>,
        underlying_symbol: Option<FIXString>,
        underlying_symbol_sfx: Option<FIXString>,
        underlying_security_id: Option<FIXString>,
        underlying_id_source: Option<FIXString>,
        underlying_security_type: Option<FIXString>,
        underlying_maturity_month_year: Option<MonthYear>,
        underlying_maturity_day: Option<DayOfMonth>,
        underlying_put_or_call: Option<FIXInt>,
        underlying_strike_price: Option<Price>,
        underlying_opt_attribute: Option<FIXChar>,
        underlying_contract_multiplier: Option<FIXFloat>,
        underlying_coupon_rate: Option<FIXFloat>,
        underlying_security_exchange: Option<ReutersExchange>,
        underlying_issuer: Option<FIXString>,
        encoded_underlying_issuer: Option<Data>,
        underlying_security_desc: Option<FIXString>,
        encoded_underlying_security_desc: Option<Data>,
        ratio_qty: Option<Qty>,
        side: Option<Side>,
        underlying_currency: Option<Currency>
    },

    /// SecurityStatusRequest message. Message code: e
    SecurityStatusRequest {
        security_status_req_id: FIXString,
        symbol: FIXString,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        currency: Option<Currency>,
        subscription_request_type: SubscriptionRequestType,
        trading_session_id: Option<FIXString>
    },

    /// SecurityStatus message. Message code: f
    SecurityStatus {
        security_status_req_id: Option<FIXString>,
        symbol: FIXString,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        currency: Option<Currency>,
        trading_session_id: Option<FIXString>,
        unsolicited_indicator: Option<UnsolicitedIndicator>,
        security_trading_status: Option<SecurityTradingStatus>,
        financial_status: Option<FinancialStatus>,
        corporate_action: Option<CorporateAction>,
        halt_reason_char: Option<HaltReasonChar>,
        in_view_of_common: Option<InViewOfCommon>,
        due_to_related: Option<DueToRelated>,
        buy_volume: Option<Qty>,
        sell_volume: Option<Qty>,
        high_px: Option<Price>,
        low_px: Option<Price>,
        last_px: Option<Price>,
        transact_time: Option<UTCTimestamp>,
        adjustment: Option<Adjustment>
    },

    /// TradingSessionStatusRequest message. Message code: g
    TradingSessionStatusRequest {
        trad_ses_req_id: FIXString,
        trading_session_id: Option<FIXString>,
        trad_ses_method: Option<TradSesMethod>,
        trad_ses_mode: Option<TradSesMode>,
        subscription_request_type: SubscriptionRequestType
    },

    /// TradingSessionStatus message. Message code: h
    TradingSessionStatus {
        trad_ses_req_id: Option<FIXString>,
        trading_session_id: FIXString,
        trad_ses_method: Option<TradSesMethod>,
        trad_ses_mode: Option<TradSesMode>,
        unsolicited_indicator: Option<UnsolicitedIndicator>,
        trad_ses_status: TradSesStatus,
        trad_ses_start_time: Option<UTCTimestamp>,
        trad_ses_open_time: Option<UTCTimestamp>,
        trad_ses_pre_close_time: Option<UTCTimestamp>,
        trad_ses_close_time: Option<UTCTimestamp>,
        trad_ses_end_time: Option<UTCTimestamp>,
        total_volume_traded: Option<Qty>,
        text: Option<FIXString>,
        encoded_text: Option<Data>
    },

    /// MassQuote message. Message code: i
    MassQuote {
        quote_req_id: Option<FIXString>,
        quote_id: FIXString,
        quote_response_level: Option<QuoteResponseLevel>,
        def_bid_size: Option<Qty>,
        def_offer_size: Option<Qty>,
        quote_set_id: FIXString,
        underlying_symbol: FIXString,
        underlying_symbol_sfx: Option<FIXString>,
        underlying_security_id: Option<FIXString>,
        underlying_id_source: Option<FIXString>,
        underlying_security_type: Option<FIXString>,
        underlying_maturity_month_year: Option<MonthYear>,
        underlying_maturity_day: Option<DayOfMonth>,
        underlying_put_or_call: Option<FIXInt>,
        underlying_strike_price: Option<Price>,
        underlying_opt_attribute: Option<FIXChar>,
        underlying_contract_multiplier: Option<FIXFloat>,
        underlying_coupon_rate: Option<FIXFloat>,
        underlying_security_exchange: Option<ReutersExchange>,
        underlying_issuer: Option<FIXString>,
        encoded_underlying_issuer: Option<Data>,
        underlying_security_desc: Option<FIXString>,
        encoded_underlying_security_desc: Option<Data>,
        quote_set_valid_until_time: Option<UTCTimestamp>,
        tot_quote_entries: FIXInt,
        quote_entry_id: FIXString,
        symbol: Option<FIXString>,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        bid_px: Option<Price>,
        offer_px: Option<Price>,
        bid_size: Option<Qty>,
        offer_size: Option<Qty>,
        valid_until_time: Option<UTCTimestamp>,
        bid_spot_rate: Option<Price>,
        offer_spot_rate: Option<Price>,
        bid_forward_points: Option<PriceOffset>,
        offer_forward_points: Option<PriceOffset>,
        transact_time: Option<UTCTimestamp>,
        trading_session_id: Option<FIXString>,
        fut_sett_date: Option<LocalMktDate>,
        ord_type: Option<OrdType>,
        fut_sett_date2: Option<LocalMktDate>,
        order_qty2: Option<Qty>,
        currency: Option<Currency>
    },

    /// BusinessMessageReject message. Message code: j
    BusinessMessageReject {
        ref_seq_num: Option<FIXInt>,
        ref_msg_type: FIXString,
        business_reject_ref_id: Option<FIXString>,
        business_reject_reason: BusinessRejectReason,
        text: Option<FIXString>,
        encoded_text: Option<Data>
    },

    /// BidRequest message. Message code: k
    BidRequest {
        bid_id: Option<FIXString>,
        client_bid_id: FIXString,
        bid_request_trans_type: BidRequestTransType,
        list_name: Option<FIXString>,
        total_num_securities: FIXInt,
        bid_type: FIXInt,
        num_tickets: Option<FIXInt>,
        currency: Option<Currency>,
        side_value1: Option<Amt>,
        side_value2: Option<Amt>,
        bid_descriptor_type: Option<FIXInt>,
        bid_descriptor: Option<FIXString>,
        side_value_ind: Option<FIXInt>,
        liquidity_value: Option<Amt>,
        liquidity_num_securities: Option<FIXInt>,
        liquidity_pct_low: Option<FIXFloat>,
        liquidity_pct_high: Option<FIXFloat>,
        efp_tracking_error: Option<FIXFloat>,
        fair_value: Option<Amt>,
        outside_index_pct: Option<FIXFloat>,
        value_of_futures: Option<Amt>,
        list_id: Option<FIXString>,
        side: Option<Side>,
        trading_session_id: Option<FIXString>,
        net_gross_ind: Option<NetGrossInd>,
        settlmnt_typ: Option<SettlmntTyp>,
        fut_sett_date: Option<LocalMktDate>,
        account: Option<FIXString>,
        liquidity_ind_type: Option<LiquidityIndType>,
        wt_average_liquidity: Option<FIXFloat>,
        exchange_for_physical: Option<ExchangeForPhysical>,
        out_main_cntry_u_index: Option<Amt>,
        cross_percent: Option<FIXFloat>,
        prog_rpt_reqs: Option<ProgRptReqs>,
        prog_period_interval: Option<FIXInt>,
        inc_tax_ind: Option<IncTaxInd>,
        forex_req: Option<ForexReq>,
        num_bidders: Option<FIXInt>,
        trade_date: Option<LocalMktDate>,
        trade_type: TradeType,
        basis_px_type: BasisPxType,
        strike_time: Option<UTCTimestamp>,
        text: Option<FIXString>,
        encoded_text: Option<Data>
    },

    /// BidResponse message. Message code: l
    BidResponse {
        bid_id: Option<FIXString>,
        client_bid_id: Option<FIXString>,
        commission: Amt,
        comm_type: CommType,
        list_id: Option<FIXString>,
        country: Option<FIXString>,
        side: Option<Side>,
        price: Option<Price>,
        price_type: Option<PriceType>,
        fair_value: Option<Amt>,
        net_gross_ind: Option<NetGrossInd>,
        settlmnt_typ: Option<SettlmntTyp>,
        fut_sett_date: Option<LocalMktDate>,
        trading_session_id: Option<FIXString>,
        text: Option<FIXString>,
        encoded_text: Option<Data>
    },

    /// ListStrikePrice message. Message code: m
    ListStrikePrice {
        list_id: FIXString,
        tot_no_strikes: FIXInt,
        symbol: FIXString,
        symbol_sfx: Option<FIXString>,
        security_id: Option<FIXString>,
        id_source: Option<IDSource>,
        security_type: Option<SecurityType>,
        maturity_month_year: Option<MonthYear>,
        maturity_day: Option<DayOfMonth>,
        put_or_call: Option<PutOrCall>,
        strike_price: Option<Price>,
        opt_attribute: Option<FIXChar>,
        contract_multiplier: Option<FIXFloat>,
        coupon_rate: Option<FIXFloat>,
        security_exchange: Option<ReutersExchange>,
        issuer: Option<FIXString>,
        encoded_issuer: Option<Data>,
        security_desc: Option<FIXString>,
        encoded_security_desc: Option<Data>,
        prev_close_px: Option<Price>,
        cl_ord_id: Option<FIXString>,
        side: Option<Side>,
        price: Price,
        currency: Option<Currency>,
        text: Option<FIXString>,
        encoded_text: Option<Data>
    }
}