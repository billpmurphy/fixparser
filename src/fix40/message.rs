use types::*;
use fix40::fields::*;

pub struct Header {
    pub begin_string: FIXChar,
    pub body_length: FIXInt,
    pub msg_type: MsgType,
    pub sender_comp_id: FIXChar,
    pub target_comp_id: FIXChar,
    pub on_behalf_of_comp_id: Option<FIXChar>,
    pub deliver_to_comp_id: Option<FIXChar>,
    pub secure_data_len: Option<Length>,
    pub secure_data: Option<Data>,
    pub msg_seq_num: FIXInt,
    pub sender_sub_id: Option<FIXChar>,
    pub target_sub_id: Option<FIXChar>,
    pub on_behalf_of_sub_id: Option<FIXChar>,
    pub deliver_to_sub_id: Option<FIXChar>,
    pub poss_dup_flag: Option<PossDupFlag>,
    pub poss_resend: Option<FIXChar>,
    pub sending_time: UTCTimeOnly,
    pub orig_sending_time: Option<UTCTimeOnly>
}

pub struct Trailer {
    pub begin_string: FIXChar,
    pub body_length: FIXInt,
    pub msg_type: MsgType,
    pub sender_comp_id: FIXChar,
    pub target_comp_id: FIXChar,
    pub on_behalf_of_comp_id: Option<FIXChar>,
    pub deliver_to_comp_id: Option<FIXChar>,
    pub secure_data_len: Option<Length>,
    pub secure_data: Option<Data>,
    pub msg_seq_num: FIXInt,
    pub sender_sub_id: Option<FIXChar>,
    pub target_sub_id: Option<FIXChar>,
    pub on_behalf_of_sub_id: Option<FIXChar>,
    pub deliver_to_sub_id: Option<FIXChar>,
    pub poss_dup_flag: Option<PossDupFlag>,
    pub poss_resend: Option<FIXChar>,
    pub sending_time: UTCTimeOnly,
    pub orig_sending_time: Option<UTCTimeOnly>
}

pub struct Message {
    pub header: Header,
    pub trailer: Trailer,
    pub body: MessageBody
}

pub enum MessageBody {
    Heartbeat {
        test_req_id: Option<FIXChar>
    },
    TestRequest {
        test_req_id: FIXChar
    },
    ResendRequest {
        begin_seq_no: FIXInt,
        end_seq_no: FIXInt
    },
    Reject {
        ref_seq_num: FIXInt,
        text: Option<FIXChar>
    },
    SequenceReset {
        gap_fill_flag: Option<GapFillFlag>,
        new_seq_no: FIXInt
    },
    Logout {
        text: Option<FIXChar>
    },
    IOI {
        io_iid: FIXInt,
        ioi_trans_type: IOITransType,
        ioi_ref_id: Option<FIXInt>,
        symbol: FIXChar,
        symbol_sfx: Option<FIXChar>,
        security_id: Option<FIXChar>,
        id_source: Option<IDSource>,
        issuer: Option<FIXChar>,
        security_desc: Option<FIXChar>,
        side: Side,
        ioi_shares: IOIShares,
        price: Option<FIXFloat>,
        currency: Option<FIXChar>,
        valid_until_time: Option<UTCTimeOnly>,
        ioi_qlty_ind: Option<IOIQltyInd>,
        ioi_oth_svc: Option<IOIOthSvc>,
        ioi_natural_flag: Option<IOINaturalFlag>,
        ioi_qualifier: Option<IOIQualifier>,
        text: Option<FIXChar>
    },
    Advertisement {
        adv_id: FIXInt,
        adv_trans_type: AdvTransType,
        adv_ref_id: Option<FIXInt>,
        symbol: FIXChar,
        symbol_sfx: Option<FIXChar>,
        security_id: Option<FIXChar>,
        id_source: Option<IDSource>,
        issuer: Option<FIXChar>,
        security_desc: Option<FIXChar>,
        adv_side: AdvSide,
        shares: FIXInt,
        price: Option<FIXFloat>,
        currency: Option<FIXChar>,
        transact_time: Option<UTCTimeOnly>,
        text: Option<FIXChar>
    },
    ExecutionReport {
        order_id: FIXChar,
        cl_ord_id: Option<FIXChar>,
        client_id: Option<FIXChar>,
        exec_broker: Option<FIXChar>,
        list_id: Option<FIXChar>,
        exec_id: FIXInt,
        exec_trans_type: ExecTransType,
        exec_ref_id: Option<FIXInt>,
        ord_status: OrdStatus,
        ord_rej_reason: Option<OrdRejReason>,
        account: Option<FIXChar>,
        settlmnt_typ: Option<SettlmntTyp>,
        fut_sett_date: Option<UTCDateOnly>,
        symbol: FIXChar,
        symbol_sfx: Option<FIXChar>,
        security_id: Option<FIXChar>,
        id_source: Option<IDSource>,
        issuer: Option<FIXChar>,
        security_desc: Option<FIXChar>,
        side: Side,
        order_qty: FIXInt,
        ord_type: Option<OrdType>,
        price: Option<FIXFloat>,
        stop_px: Option<FIXFloat>,
        currency: Option<FIXChar>,
        time_in_force: Option<TimeInForce>,
        expire_time: Option<UTCTimeOnly>,
        exec_inst: Option<ExecInst>,
        rule80_a: Option<Rule80A>,
        last_shares: FIXInt,
        last_px: FIXFloat,
        last_mkt: Option<FIXChar>,
        last_capacity: Option<LastCapacity>,
        cum_qty: FIXInt,
        avg_px: FIXFloat,
        trade_date: Option<UTCDateOnly>,
        transact_time: Option<UTCTimeOnly>,
        report_to_exch: Option<ReportToExch>,
        commission: Option<FIXFloat>,
        comm_type: Option<CommType>,
        no_misc_fees: Option<FIXInt>,
        net_money: Option<FIXFloat>,
        settl_curr_amt: Option<FIXFloat>,
        settl_currency: Option<FIXChar>,
        text: Option<FIXChar>
    },
    OrderCancelReject {
        order_id: FIXChar,
        cl_ord_id: FIXChar,
        client_id: Option<FIXChar>,
        exec_broker: Option<FIXChar>,
        list_id: Option<FIXChar>,
        cxl_rej_reason: Option<CxlRejReason>,
        text: Option<FIXChar>
    },
    Logon {
        encrypt_method: EncryptMethod,
        heart_bt_int: FIXInt,
        raw_data_length: Option<Length>,
        raw_data: Option<Data>
    },
    News {
        orig_time: Option<UTCTimeOnly>,
        urgency: Option<Urgency>,
        relatd_sym: Option<FIXChar>,
        lines_of_text: FIXInt,
        text: FIXChar,
        raw_data_length: Option<Length>,
        raw_data: Option<Data>
    },
    Email {
        email_type: EmailType,
        orig_time: Option<UTCTimeOnly>,
        relatd_sym: Option<FIXChar>,
        order_id: Option<FIXChar>,
        cl_ord_id: Option<FIXChar>,
        lines_of_text: FIXInt,
        text: FIXChar,
        raw_data_length: Option<Length>,
        raw_data: Option<Data>
    },
    NewOrderSingle {
        cl_ord_id: FIXChar,
        client_id: Option<FIXChar>,
        exec_broker: Option<FIXChar>,
        account: Option<FIXChar>,
        settlmnt_typ: Option<SettlmntTyp>,
        fut_sett_date: Option<UTCDateOnly>,
        handl_inst: HandlInst,
        exec_inst: Option<ExecInst>,
        min_qty: Option<FIXInt>,
        max_floor: Option<FIXInt>,
        ex_destination: Option<ExDestination>,
        process_code: Option<ProcessCode>,
        symbol: FIXChar,
        symbol_sfx: Option<FIXChar>,
        security_id: Option<FIXChar>,
        id_source: Option<IDSource>,
        issuer: Option<FIXChar>,
        security_desc: Option<FIXChar>,
        prev_close_px: Option<FIXFloat>,
        side: Side,
        locate_reqd: Option<LocateReqd>,
        order_qty: FIXInt,
        ord_type: OrdType,
        price: Option<FIXFloat>,
        stop_px: Option<FIXFloat>,
        currency: Option<FIXChar>,
        io_iid: Option<FIXInt>,
        quote_id: Option<FIXChar>,
        time_in_force: Option<TimeInForce>,
        expire_time: Option<UTCTimeOnly>,
        commission: Option<FIXFloat>,
        comm_type: Option<CommType>,
        rule80_a: Option<Rule80A>,
        forex_req: Option<ForexReq>,
        settl_currency: Option<FIXChar>,
        text: Option<FIXChar>
    },
    NewOrderList {
        list_id: FIXChar,
        wave_no: Option<FIXChar>,
        list_seq_no: FIXInt,
        list_no_ords: FIXInt,
        list_exec_inst: Option<FIXChar>,
        cl_ord_id: FIXChar,
        client_id: Option<FIXChar>,
        exec_broker: Option<FIXChar>,
        account: Option<FIXChar>,
        settlmnt_typ: Option<SettlmntTyp>,
        fut_sett_date: Option<UTCDateOnly>,
        handl_inst: HandlInst,
        exec_inst: Option<ExecInst>,
        min_qty: Option<FIXInt>,
        max_floor: Option<FIXInt>,
        ex_destination: Option<ExDestination>,
        process_code: Option<ProcessCode>,
        symbol: FIXChar,
        symbol_sfx: Option<FIXChar>,
        security_id: Option<FIXChar>,
        id_source: Option<IDSource>,
        issuer: Option<FIXChar>,
        security_desc: Option<FIXChar>,
        prev_close_px: Option<FIXFloat>,
        side: Side,
        locate_reqd: Option<LocateReqd>,
        order_qty: FIXInt,
        ord_type: OrdType,
        price: Option<FIXFloat>,
        stop_px: Option<FIXFloat>,
        currency: Option<FIXChar>,
        time_in_force: Option<TimeInForce>,
        expire_time: Option<UTCTimeOnly>,
        commission: Option<FIXFloat>,
        comm_type: Option<CommType>,
        rule80_a: Option<Rule80A>,
        forex_req: Option<ForexReq>,
        settl_currency: Option<FIXChar>,
        text: Option<FIXChar>
    },
    OrderCancelRequest {
        orig_cl_ord_id: FIXChar,
        order_id: Option<FIXChar>,
        cl_ord_id: FIXChar,
        list_id: Option<FIXChar>,
        cxl_type: CxlType,
        client_id: Option<FIXChar>,
        exec_broker: Option<FIXChar>,
        symbol: FIXChar,
        symbol_sfx: Option<FIXChar>,
        security_id: Option<FIXChar>,
        id_source: Option<IDSource>,
        issuer: Option<FIXChar>,
        security_desc: Option<FIXChar>,
        side: Side,
        order_qty: FIXInt,
        text: Option<FIXChar>
    },
    OrderCancelReplaceRequest {
        order_id: Option<FIXChar>,
        client_id: Option<FIXChar>,
        exec_broker: Option<FIXChar>,
        orig_cl_ord_id: FIXChar,
        cl_ord_id: FIXChar,
        list_id: Option<FIXChar>,
        account: Option<FIXChar>,
        settlmnt_typ: Option<SettlmntTyp>,
        fut_sett_date: Option<UTCDateOnly>,
        handl_inst: HandlInst,
        exec_inst: Option<ExecInst>,
        min_qty: Option<FIXInt>,
        max_floor: Option<FIXInt>,
        ex_destination: Option<ExDestination>,
        symbol: FIXChar,
        symbol_sfx: Option<FIXChar>,
        security_id: Option<FIXChar>,
        id_source: Option<IDSource>,
        issuer: Option<FIXChar>,
        security_desc: Option<FIXChar>,
        side: Side,
        order_qty: FIXInt,
        ord_type: OrdType,
        price: Option<FIXFloat>,
        stop_px: Option<FIXFloat>,
        currency: Option<FIXChar>,
        time_in_force: Option<TimeInForce>,
        expire_time: Option<UTCTimeOnly>,
        commission: Option<FIXFloat>,
        comm_type: Option<CommType>,
        rule80_a: Option<Rule80A>,
        forex_req: Option<ForexReq>,
        settl_currency: Option<FIXChar>,
        text: Option<FIXChar>
    },
    OrderStatusRequest {
        order_id: Option<FIXChar>,
        cl_ord_id: FIXChar,
        client_id: Option<FIXChar>,
        exec_broker: Option<FIXChar>,
        symbol: FIXChar,
        symbol_sfx: Option<FIXChar>,
        issuer: Option<FIXChar>,
        security_desc: Option<FIXChar>,
        side: Side
    },
    Allocation {
        alloc_id: FIXInt,
        alloc_trans_type: AllocTransType,
        ref_alloc_id: Option<FIXInt>,
        no_orders: FIXInt,
        no_execs: Option<FIXInt>,
        side: Side,
        symbol: FIXChar,
        symbol_sfx: Option<FIXChar>,
        security_id: Option<FIXChar>,
        id_source: Option<IDSource>,
        issuer: Option<FIXChar>,
        security_desc: Option<FIXChar>,
        shares: FIXInt,
        avg_px: FIXFloat,
        currency: Option<FIXChar>,
        avg_prx_precision: Option<FIXInt>,
        trade_date: UTCDateOnly,
        transact_time: Option<UTCTimeOnly>,
        settlmnt_typ: Option<SettlmntTyp>,
        fut_sett_date: Option<UTCDateOnly>,
        net_money: Option<FIXFloat>,
        no_misc_fees: Option<FIXInt>,
        settl_curr_amt: Option<FIXFloat>,
        settl_currency: Option<FIXChar>,
        open_close: Option<FIXChar>,
        text: Option<FIXChar>,
        no_allocs: FIXInt
    },
    ListCancelRequest {
        list_id: FIXChar,
        wave_no: Option<FIXChar>,
        text: Option<FIXChar>
    },
    ListExecute {
        list_id: FIXChar,
        wave_no: Option<FIXChar>,
        text: Option<FIXChar>
    },
    ListStatusRequest {
        list_id: FIXChar,
        wave_no: Option<FIXChar>,
        text: Option<FIXChar>
    },
    ListStatus {
        list_id: FIXChar,
        wave_no: Option<FIXChar>,
        no_rpts: FIXInt,
        rpt_seq: FIXInt,
        no_orders: FIXInt
    },
    AllocationInstructionAck {
        client_id: Option<FIXChar>,
        exec_broker: Option<FIXChar>,
        alloc_id: FIXInt,
        trade_date: UTCDateOnly,
        transact_time: Option<UTCTimeOnly>,
        alloc_status: AllocStatus,
        alloc_rej_code: Option<AllocRejCode>,
        text: Option<FIXChar>
    },
    DontKnowTrade {
        order_id: Option<FIXChar>,
        exec_id: Option<FIXInt>,
        dk_reason: DKReason,
        symbol: FIXChar,
        side: Side,
        order_qty: FIXInt,
        last_shares: FIXInt,
        last_px: FIXFloat,
        text: Option<FIXChar>
    },
    QuoteRequest {
        quote_req_id: FIXChar,
        symbol: FIXChar,
        symbol_sfx: Option<FIXChar>,
        security_id: Option<FIXChar>,
        id_source: Option<IDSource>,
        issuer: Option<FIXChar>,
        security_desc: Option<FIXChar>,
        prev_close_px: Option<FIXFloat>,
        side: Option<Side>,
        order_qty: Option<FIXInt>
    },
    Quote {
        quote_req_id: Option<FIXChar>,
        quote_id: FIXChar,
        symbol: FIXChar,
        symbol_sfx: Option<FIXChar>,
        security_id: Option<FIXChar>,
        id_source: Option<IDSource>,
        issuer: Option<FIXChar>,
        security_desc: Option<FIXChar>,
        bid_px: FIXFloat,
        offer_px: Option<FIXFloat>,
        bid_size: Option<FIXInt>,
        offer_size: Option<FIXInt>,
        valid_until_time: Option<UTCTimeOnly>
    }
}